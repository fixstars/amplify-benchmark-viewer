stages:
  - scan
  - push
  - pages

Prettier:
  stage: scan
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run format
  only:
    refs:
      - merge_requests

ESLint:
  stage: scan
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run lint
  only:
    refs:
      - merge_requests

StyleLint:
  stage: scan
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run lint:css
  only:
    refs:
      - merge_requests

CheckTypo:
  stage: scan
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run check:spell
  only:
    refs:
      - merge_requests

Test:
  stage: scan
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run test:ci
  only:
    refs:
      - merge_requests

sync-repositories:
  stage: push
  tags:
    - docker
  image: bitnami/git
  script:
    # prepare remote repositories
    - git remote set-url origin https://gitlab-ci-token:$GITLAB_TOKEN@${CI_REPOSITORY_URL##*@}
    - git config remote.github.url >&- && git remote set-url github https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/fixstars/amplify-benchmark-viewer-test.git || git remote add github https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/fixstars/amplify-benchmark-viewer-test.git
    - git config user.email "noreply@fixstars.com"
    - git config user.name "GitLab Bot"
    - git fetch github main
    - git fetch origin main develop
    - git switch develop
    - git reset --hard origin/develop
    - git clean -xfd
    # rebase and push
    - git status
    - git rebase github/main
    - git push origin develop
    - git push origin develop:main
    - git push github develop:main
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'

test_pages:
  stage: pages
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run build
  artifacts:
    paths:
      - dist
  only:
    - merge_requests

pages:
  stage: pages
  tags:
    - docker
  image: node:16-slim
  script:
    - npm install --global npm@latest
    - npm ci
    - npm run build
    - cp -rp dist/* public
  artifacts:
    paths:
      - public
  only:
    - develop
